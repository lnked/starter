{"version":3,"sources":["../../src/react/utils.js"],"names":["isReactElement","getReactSymbol","isTagName","isReactComponent","valueIsClassComponent","valueIsKnownReactAbstraction","valueIsReactLibraryObject","valueIsLegacyCreateClassComponent","valueIsFactoryClassComponent","addKeyToReactElement","getUniqueReactElementKey","forEachArrayValue","mapArrayValue","convertSimpleClassComponentToFunctionalComponent","convertFunctionalComponentToComplexClassComponent","normalizeFunctionalComponentParamaters","createReactHintObject","getComponentTypeFromRootValue","deleteRefAndKeyFromProps","objectHasNoPartialKeyAndRef","flattenChildren","evaluateWithNestedParentEffects","deleteProperty","setProperty","getProperty","createReactEvaluatedNode","getComponentName","convertConfigObjectToReactComponentTreeConfig","getValueFromFunctionCall","sanitizeReactElementForFirstRenderOnly","getLocationFromValue","createNoopFunction","doNotOptimizeComponent","t","val","realm","$Realm","react","enabled","reactElements","has","properties","$$typeof","globalObject","$GlobalObject","globalSymbolValue","intrinsics","undefined","value","symbolFromRegistry","globalSymbolRegistry","find","e","$Symbol","_isReactElement","$Key","add","symbolKey","reactSymbol","symbols","get","SymbolFor","Symbol","SymbolForDescriptor","descriptor","SymbolForValue","$Call","set","ast","type","test","name","length","toUpperCase","prototype","ToBooleanPartial","abstractHints","logger","fbLibraries","reactVersion","tryQuery","reactCreateElement","reactCloneElement","reactIsValidElement","reactComponent","reactChildren","reactSerializerState","reactElement","currentKeyValue","null","uniqueKey","usedReactElementKeys","newKeyValue","index","key","Math","random","toString","replace","substring","array","mapFunc","lengthValue","i","elementProperty","elementPropertyDescriptor","elementValue","newArray","ArrayCreate","returnTheNewArray","newElement","CreateDataPropertyOrThrow","GetDescriptorForProperty","propertyName","object","complexComponentType","additionalFunctionEffects","configurable","DeletePropertyOrThrow","$FunctionKind","$Prototype","FunctionPrototype","$FormalParameters","identifier","transforms","push","body","funcNode","functionExpression","blockStatement","file","program","expressionStatement","path","node","isIdentifier","isThisExpression","parentPath","parentNode","isMemberExpression","replaceWith","property","clearCache","createBinding","cloneProperties","newProperties","Map","cloneSymbols","newSymbols","symbol","cloneValue","originalValue","_prototype","copyToObject","cloneFunction","newValue","intrinsicName","Object","assign","originalPrototype","$HomeObject","clonePrototype","Set","newPrototype","ObjectPrototype","skipFunctionProperties","functionalComponentType","userCodePropertiesToAdd","userCodeSymbolsToAdd","binding","unshift","variableDeclaration","variableDeclarator","memberExpression","thisExpression","func","lengthProperty","writable","enumerable","map","param","args","firstRenderValue","_valueIsKnownReactAbstraction","reactHint","reactRelay","Array","isArray","componentType","props","recursivelyFlattenArray","targetArray","item","flattenedChildren","nestedEffects","f","nextEffects","slice","modifiedBindings","modifiedProperties","createdObjects","effects","shift","result","applyEffects","restoreBindings","restoreProperties","elements","values","getElements","size","from","defaultBinding","isTop","reportIntrospectionError","status","children","message","boundText","__originalName","config","firstRenderOnly","propValue","diagnostic","currentLocation","handleError","funcThis","isConstructor","funcCall","newCall","$Construct","completion","error","composeWithSavedCompletion","isEventProp","toLowerCase","typeValue","propsValue","propName","expressionLocation","start","line","column","end","noopFunction","noOpFunc","uniqueOrderedTag","functionBodyUniqueTagSeed","$ECMAScriptCode","doNotOptimize"],"mappings":"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","file":"utils.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport { Realm, Effects } from \"../realm.js\";\nimport { AbruptCompletion, PossiblyNormalCompletion } from \"../completions.js\";\nimport type { BabelNode, BabelNodeJSXIdentifier } from \"babel-types\";\nimport {\n  AbstractObjectValue,\n  AbstractValue,\n  ArrayValue,\n  BooleanValue,\n  BoundFunctionValue,\n  ECMAScriptSourceFunctionValue,\n  FunctionValue,\n  NumberValue,\n  ObjectValue,\n  StringValue,\n  SymbolValue,\n  UndefinedValue,\n  Value,\n} from \"../values/index.js\";\nimport { Generator } from \"../utils/generator.js\";\nimport type {\n  Descriptor,\n  FunctionBodyAstNode,\n  ReactComponentTreeConfig,\n  ReactHint,\n  PropertyBinding,\n} from \"../types.js\";\nimport { Get, cloneDescriptor } from \"../methods/index.js\";\nimport { computeBinary } from \"../evaluators/BinaryExpression.js\";\nimport type { ReactSerializerState, AdditionalFunctionEffects, ReactEvaluatedNode } from \"../serializer/types.js\";\nimport invariant from \"../invariant.js\";\nimport { Create, Properties, To } from \"../singletons.js\";\nimport traverse from \"babel-traverse\";\nimport * as t from \"babel-types\";\nimport type { BabelNodeStatement } from \"babel-types\";\nimport { CompilerDiagnostic, FatalError } from \"../errors.js\";\n\nexport type ReactSymbolTypes =\n  | \"react.element\"\n  | \"react.context\"\n  | \"react.provider\"\n  | \"react.fragment\"\n  | \"react.portal\"\n  | \"react.return\"\n  | \"react.call\";\n\nexport function isReactElement(val: Value): boolean {\n  if (!(val instanceof ObjectValue)) {\n    return false;\n  }\n  let realm = val.$Realm;\n  if (!realm.react.enabled) {\n    return false;\n  }\n  if (realm.react.reactElements.has(val)) {\n    return true;\n  }\n  if (!val.properties.has(\"type\") || !val.properties.has(\"props\") || !val.properties.has(\"$$typeof\")) {\n    return false;\n  }\n  let $$typeof = getProperty(realm, val, \"$$typeof\");\n  let globalObject = realm.$GlobalObject;\n  let globalSymbolValue = getProperty(realm, globalObject, \"Symbol\");\n\n  if (globalSymbolValue === realm.intrinsics.undefined) {\n    if ($$typeof instanceof NumberValue) {\n      return $$typeof.value === 0xeac7;\n    }\n  } else if ($$typeof instanceof SymbolValue) {\n    let symbolFromRegistry = realm.globalSymbolRegistry.find(e => e.$Symbol === $$typeof);\n    let _isReactElement = symbolFromRegistry !== undefined && symbolFromRegistry.$Key === \"react.element\";\n    if (_isReactElement) {\n      // add to Set to speed up future lookups\n      realm.react.reactElements.add(val);\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function getReactSymbol(symbolKey: ReactSymbolTypes, realm: Realm): SymbolValue {\n  let reactSymbol = realm.react.symbols.get(symbolKey);\n  if (reactSymbol !== undefined) {\n    return reactSymbol;\n  }\n  let SymbolFor = realm.intrinsics.Symbol.properties.get(\"for\");\n  if (SymbolFor !== undefined) {\n    let SymbolForDescriptor = SymbolFor.descriptor;\n\n    if (SymbolForDescriptor !== undefined) {\n      let SymbolForValue = SymbolForDescriptor.value;\n      if (SymbolForValue instanceof ObjectValue && typeof SymbolForValue.$Call === \"function\") {\n        reactSymbol = SymbolForValue.$Call(realm.intrinsics.Symbol, [new StringValue(realm, symbolKey)]);\n        invariant(reactSymbol instanceof SymbolValue);\n        realm.react.symbols.set(symbolKey, reactSymbol);\n      }\n    }\n  }\n  invariant(reactSymbol instanceof SymbolValue, `Symbol(\"${symbolKey}\") could not be found in realm`);\n  return reactSymbol;\n}\n\nexport function isTagName(ast: BabelNode): boolean {\n  return ast.type === \"JSXIdentifier\" && /^[a-z]|\\-/.test(((ast: any): BabelNodeJSXIdentifier).name);\n}\n\nexport function isReactComponent(name: string) {\n  return name.length > 0 && name[0] === name[0].toUpperCase();\n}\n\nexport function valueIsClassComponent(realm: Realm, value: Value): boolean {\n  if (!(value instanceof FunctionValue)) {\n    return false;\n  }\n  let prototype = Get(realm, value, \"prototype\");\n\n  if (prototype instanceof ObjectValue) {\n    return To.ToBooleanPartial(realm, Get(realm, prototype, \"isReactComponent\"));\n  }\n  return false;\n}\n\nexport function valueIsKnownReactAbstraction(realm: Realm, value: Value): boolean {\n  return value instanceof AbstractObjectValue && realm.react.abstractHints.has(value);\n}\n\n// logger isn't typed otherwise it will increase flow cycle length :()\nexport function valueIsReactLibraryObject(realm: Realm, value: ObjectValue, logger: any): boolean {\n  if (realm.fbLibraries.react === value) {\n    return true;\n  }\n  // we check that the object is the React or React-like library by checking for\n  // core properties that should exist on it\n  let reactVersion = logger.tryQuery(() => Get(realm, value, \"version\"), undefined);\n  if (!(reactVersion instanceof StringValue)) {\n    return false;\n  }\n  let reactCreateElement = logger.tryQuery(() => Get(realm, value, \"createElement\"), undefined);\n  if (!(reactCreateElement instanceof FunctionValue)) {\n    return false;\n  }\n  let reactCloneElement = logger.tryQuery(() => Get(realm, value, \"cloneElement\"), undefined);\n  if (!(reactCloneElement instanceof FunctionValue)) {\n    return false;\n  }\n  let reactIsValidElement = logger.tryQuery(() => Get(realm, value, \"isValidElement\"), undefined);\n  if (!(reactIsValidElement instanceof FunctionValue)) {\n    return false;\n  }\n  let reactComponent = logger.tryQuery(() => Get(realm, value, \"Component\"), undefined);\n  if (!(reactComponent instanceof FunctionValue)) {\n    return false;\n  }\n  let reactChildren = logger.tryQuery(() => Get(realm, value, \"Children\"), undefined);\n  if (!(reactChildren instanceof ObjectValue)) {\n    return false;\n  }\n  return false;\n}\n\nexport function valueIsLegacyCreateClassComponent(realm: Realm, value: Value): boolean {\n  if (!(value instanceof FunctionValue)) {\n    return false;\n  }\n  let prototype = Get(realm, value, \"prototype\");\n\n  if (prototype instanceof ObjectValue) {\n    return prototype.properties.has(\"__reactAutoBindPairs\");\n  }\n  return false;\n}\n\nexport function valueIsFactoryClassComponent(realm: Realm, value: Value): boolean {\n  if (value instanceof ObjectValue) {\n    return To.ToBooleanPartial(realm, Get(realm, value, \"render\"));\n  }\n  return false;\n}\n\nexport function addKeyToReactElement(\n  realm: Realm,\n  reactSerializerState: ReactSerializerState,\n  reactElement: ObjectValue\n): void {\n  // we need to apply a key when we're branched\n  let currentKeyValue = getProperty(realm, reactElement, \"key\") || realm.intrinsics.null;\n  let uniqueKey = getUniqueReactElementKey(\"\", reactSerializerState.usedReactElementKeys);\n  let newKeyValue = new StringValue(realm, uniqueKey);\n  if (currentKeyValue !== realm.intrinsics.null) {\n    newKeyValue = computeBinary(realm, \"+\", currentKeyValue, newKeyValue);\n  }\n  setProperty(reactElement, \"key\", newKeyValue);\n}\n// we create a unique key for each JSXElement to prevent collisions\n// otherwise React will detect a missing/conflicting key at runtime and\n// this can break the reconcilation of JSXElements in arrays\nexport function getUniqueReactElementKey(index?: string, usedReactElementKeys: Set<string>) {\n  let key;\n  do {\n    key = Math.random()\n      .toString(36)\n      .replace(/[^a-z]+/g, \"\")\n      .substring(0, 2);\n  } while (usedReactElementKeys.has(key));\n  usedReactElementKeys.add(key);\n  if (index !== undefined) {\n    return `${key}${index}`;\n  }\n  return key;\n}\n\n// a helper function to loop over ArrayValues\nexport function forEachArrayValue(\n  realm: Realm,\n  array: ArrayValue,\n  mapFunc: (element: Value, descriptor: Descriptor) => void\n): void {\n  let lengthValue = Get(realm, array, \"length\");\n  invariant(lengthValue instanceof NumberValue, \"TODO: support non-numeric length on forEachArrayValue\");\n  let length = lengthValue.value;\n  for (let i = 0; i < length; i++) {\n    let elementProperty = array.properties.get(\"\" + i);\n    let elementPropertyDescriptor = elementProperty && elementProperty.descriptor;\n    if (elementPropertyDescriptor) {\n      let elementValue = elementPropertyDescriptor.value;\n      if (elementValue instanceof Value) {\n        mapFunc(elementValue, elementPropertyDescriptor);\n      }\n    }\n  }\n}\n\nexport function mapArrayValue(\n  realm: Realm,\n  array: ArrayValue,\n  mapFunc: (element: Value, descriptor: Descriptor) => Value\n): ArrayValue {\n  let lengthValue = Get(realm, array, \"length\");\n  invariant(lengthValue instanceof NumberValue, \"TODO: support non-numeric length on mapArrayValue\");\n  let length = lengthValue.value;\n  let newArray = Create.ArrayCreate(realm, length);\n  let returnTheNewArray = false;\n\n  for (let i = 0; i < length; i++) {\n    let elementProperty = array.properties.get(\"\" + i);\n    let elementPropertyDescriptor = elementProperty && elementProperty.descriptor;\n    if (elementPropertyDescriptor) {\n      let elementValue = elementPropertyDescriptor.value;\n      if (elementValue instanceof Value) {\n        let newElement = mapFunc(elementValue, elementPropertyDescriptor);\n        if (newElement !== elementValue) {\n          returnTheNewArray = true;\n        }\n        Create.CreateDataPropertyOrThrow(realm, newArray, \"\" + i, newElement);\n        continue;\n      }\n    }\n    Create.CreateDataPropertyOrThrow(realm, newArray, \"\" + i, realm.intrinsics.undefined);\n  }\n  return returnTheNewArray ? newArray : array;\n}\n\nfunction GetDescriptorForProperty(value: ObjectValue, propertyName: string): ?Descriptor {\n  let object = value.properties.get(propertyName);\n  invariant(object);\n  return object.descriptor;\n}\n\nexport function convertSimpleClassComponentToFunctionalComponent(\n  realm: Realm,\n  complexComponentType: ECMAScriptSourceFunctionValue,\n  additionalFunctionEffects: AdditionalFunctionEffects\n): void {\n  let prototype = complexComponentType.properties.get(\"prototype\");\n  invariant(prototype);\n  invariant(prototype.descriptor);\n  prototype.descriptor.configurable = true;\n  Properties.DeletePropertyOrThrow(realm, complexComponentType, \"prototype\");\n\n  // change the function kind\n  complexComponentType.$FunctionKind = \"normal\";\n  // set the prototype back to an object\n  complexComponentType.$Prototype = realm.intrinsics.FunctionPrototype;\n  // give the function the functional components params\n  complexComponentType.$FormalParameters = [t.identifier(\"props\"), t.identifier(\"context\")];\n  // add a transform to occur after the additional function has serialized the body of the class\n  additionalFunctionEffects.transforms.push((body: Array<BabelNodeStatement>) => {\n    // as this was a class before and is now a functional component, we need to replace\n    // this.props and this.context to props and context, via the function arugments\n    let funcNode = t.functionExpression(null, [], t.blockStatement(body));\n\n    traverse(\n      t.file(t.program([t.expressionStatement(funcNode)])),\n      {\n        \"Identifier|ThisExpression\"(path) {\n          let node = path.node;\n          if ((t.isIdentifier(node) && node.name === \"this\") || t.isThisExpression(node)) {\n            let parentPath = path.parentPath;\n            let parentNode = parentPath.node;\n\n            if (t.isMemberExpression(parentNode)) {\n              // remove the \"this\" from the member\n              parentPath.replaceWith(parentNode.property);\n            } else {\n              throw new FatalError(\n                `conversion of a simple class component to functional component failed due to \"this\" not being replaced`\n              );\n            }\n          }\n        },\n      },\n      undefined,\n      (undefined: any),\n      undefined\n    );\n    traverse.clearCache();\n  });\n}\n\nfunction createBinding(descriptor: void | Descriptor, key: string | SymbolValue, object: ObjectValue) {\n  return {\n    descriptor,\n    key,\n    object,\n  };\n}\n\nfunction cloneProperties(realm: Realm, properties: Map<string, any>, object: ObjectValue): Map<string, any> {\n  let newProperties = new Map();\n  for (let [propertyName, { descriptor }] of properties) {\n    newProperties.set(propertyName, createBinding(cloneDescriptor(descriptor), propertyName, object));\n  }\n  return newProperties;\n}\n\nfunction cloneSymbols(realm: Realm, symbols: Map<SymbolValue, any>, object: ObjectValue): Map<SymbolValue, any> {\n  let newSymbols = new Map();\n  for (let [symbol, { descriptor }] of symbols) {\n    newSymbols.set(symbol, createBinding(cloneDescriptor(descriptor), symbol, object));\n  }\n  return newSymbols;\n}\n\nfunction cloneValue(\n  realm: Realm,\n  originalValue: Value,\n  _prototype: null | ObjectValue,\n  copyToObject?: ObjectValue\n): Value {\n  if (originalValue instanceof FunctionValue) {\n    return cloneFunction(realm, originalValue, _prototype, copyToObject);\n  }\n  invariant(false, \"TODO: add support to cloneValue() for more value types\");\n}\n\nfunction cloneFunction(\n  realm: Realm,\n  originalValue: Value,\n  _prototype: null | ObjectValue,\n  copyToObject?: ObjectValue\n): FunctionValue {\n  let newValue;\n  if (originalValue instanceof ECMAScriptSourceFunctionValue) {\n    newValue = copyToObject || new ECMAScriptSourceFunctionValue(realm, originalValue.intrinsicName);\n    invariant(newValue instanceof ECMAScriptSourceFunctionValue);\n    // $FlowFixMe: complains about Object.assign\n    Object.assign(newValue, originalValue);\n    let properties = cloneProperties(realm, originalValue.properties, newValue);\n    newValue.properties = properties;\n    let symbols = cloneSymbols(realm, originalValue.symbols, newValue);\n    newValue.symbols = symbols;\n\n    // handle home object + prototype\n    let originalPrototype = originalValue.$HomeObject;\n    invariant(originalPrototype instanceof ObjectValue);\n    let prototype = _prototype || clonePrototype(realm, originalPrototype);\n    newValue.$HomeObject = prototype;\n    if (originalPrototype.properties.has(\"constructor\")) {\n      Properties.Set(realm, prototype, \"constructor\", newValue, false);\n    }\n    if (originalValue.properties.has(\"prototype\")) {\n      Properties.Set(realm, newValue, \"prototype\", prototype, false);\n    }\n  }\n  invariant(newValue instanceof FunctionValue, \"TODO: add support to cloneValue() for more function types\");\n  return newValue;\n}\n\nfunction clonePrototype(realm: Realm, prototype: Value): ObjectValue {\n  invariant(prototype instanceof ObjectValue);\n  let newPrototype = new ObjectValue(realm, realm.intrinsics.ObjectPrototype, prototype.intrinsicName);\n\n  Object.assign(newPrototype, prototype);\n  for (let [propertyName] of prototype.properties) {\n    if (propertyName !== \"constructor\") {\n      let originalValue = Get(realm, prototype, propertyName);\n      let newValue = cloneValue(realm, originalValue, prototype);\n      Properties.Set(realm, newPrototype, propertyName, newValue, false);\n    }\n  }\n  for (let [symbol] of prototype.symbols) {\n    let originalValue = Get(realm, prototype, symbol);\n    let newValue = cloneValue(realm, originalValue, prototype);\n    Properties.Set(realm, newPrototype, symbol, newValue, false);\n  }\n  return newPrototype;\n}\n\nconst skipFunctionProperties = new Set([\"length\", \"prototype\", \"arguments\", \"name\", \"caller\"]);\n\nexport function convertFunctionalComponentToComplexClassComponent(\n  realm: Realm,\n  functionalComponentType: ECMAScriptSourceFunctionValue,\n  complexComponentType: void | ECMAScriptSourceFunctionValue,\n  additionalFunctionEffects: AdditionalFunctionEffects\n): void {\n  invariant(complexComponentType instanceof ECMAScriptSourceFunctionValue);\n  // get all properties on the functional component that were added in user-code\n  // we add defaultProps as undefined, as merging a class component's defaultProps on to\n  // a differnet component isn't right, we can discard defaultProps instead via folding\n  // we also don't want propTypes from the class component, so we remove that too\n  let userCodePropertiesToAdd: Map<string, PropertyBinding> = new Map([\n    [\"defaultProps\", createBinding(undefined, \"defaultProps\", functionalComponentType)],\n    [\"propTypes\", createBinding(undefined, \"propTypes\", functionalComponentType)],\n  ]);\n  let userCodeSymbolsToAdd: Map<SymbolValue, PropertyBinding> = new Map();\n\n  for (let [propertyName, binding] of functionalComponentType.properties) {\n    if (!skipFunctionProperties.has(propertyName)) {\n      userCodePropertiesToAdd.set(propertyName, binding);\n    }\n  }\n  for (let [symbol, binding] of functionalComponentType.symbols) {\n    userCodeSymbolsToAdd.set(symbol, binding);\n  }\n\n  cloneValue(realm, complexComponentType, null, functionalComponentType);\n  // then copy back and properties that were on the original functional component\n  // ensuring we overwrite any existing ones\n  for (let [propertyName, binding] of userCodePropertiesToAdd) {\n    functionalComponentType.properties.set(propertyName, binding);\n  }\n  for (let [symbol, binding] of userCodeSymbolsToAdd) {\n    functionalComponentType.symbols.set(symbol, binding);\n  }\n  // add a transform to occur after the additional function has serialized the body of the class\n  additionalFunctionEffects.transforms.push((body: Array<BabelNodeStatement>) => {\n    // as we've converted a functional component to a complex one, we are going to have issues with\n    // \"props\" and \"context\" references, as they're now going to be \"this.props\" and \"this.context\".\n    // we simply need a to add to vars to beginning of the body to get around this\n    // if they're not used, any DCE tool post-Prepack (GCC or Uglify) will remove them\n    body.unshift(\n      t.variableDeclaration(\"var\", [\n        t.variableDeclarator(t.identifier(\"props\"), t.memberExpression(t.thisExpression(), t.identifier(\"props\"))),\n        t.variableDeclarator(t.identifier(\"context\"), t.memberExpression(t.thisExpression(), t.identifier(\"context\"))),\n      ])\n    );\n  });\n}\n\nexport function normalizeFunctionalComponentParamaters(func: ECMAScriptSourceFunctionValue): void {\n  // fix the length as we may change the arguments\n  let lengthProperty = GetDescriptorForProperty(func, \"length\");\n  invariant(lengthProperty);\n  lengthProperty.writable = false;\n  lengthProperty.enumerable = false;\n  lengthProperty.configurable = true;\n  func.$FormalParameters = func.$FormalParameters.map((param, i) => {\n    if (i === 0) {\n      return t.isIdentifier(param) ? param : t.identifier(\"props\");\n    } else {\n      return t.isIdentifier(param) ? param : t.identifier(\"context\");\n    }\n  });\n  if (func.$FormalParameters.length === 1) {\n    func.$FormalParameters.push(t.identifier(\"context\"));\n  }\n  // ensure the length value is set to the correct value after\n  // we've made mutations to the arguments of this function\n  let lengthValue = lengthProperty.value;\n  invariant(lengthValue instanceof NumberValue);\n  lengthValue.value = func.$FormalParameters.length;\n}\n\nexport function createReactHintObject(\n  object: ObjectValue,\n  propertyName: string,\n  args: Array<Value>,\n  firstRenderValue: Value\n): ReactHint {\n  return {\n    firstRenderValue,\n    object,\n    propertyName,\n    args,\n  };\n}\n\nexport function getComponentTypeFromRootValue(realm: Realm, value: Value): ECMAScriptSourceFunctionValue | null {\n  let _valueIsKnownReactAbstraction = valueIsKnownReactAbstraction(realm, value);\n  if (!(value instanceof ECMAScriptSourceFunctionValue || _valueIsKnownReactAbstraction)) {\n    return null;\n  }\n  if (_valueIsKnownReactAbstraction) {\n    invariant(value instanceof AbstractValue);\n    let reactHint = realm.react.abstractHints.get(value);\n\n    invariant(reactHint);\n    if (typeof reactHint !== \"string\" && reactHint.object === realm.fbLibraries.reactRelay) {\n      switch (reactHint.propertyName) {\n        case \"createFragmentContainer\":\n        case \"createPaginationContainer\":\n        case \"createRefetchContainer\":\n          invariant(Array.isArray(reactHint.args));\n          // componentType is the 1st argument of a ReactRelay container\n          let componentType = reactHint.args[0];\n          invariant(componentType instanceof ECMAScriptSourceFunctionValue);\n          return componentType;\n        default:\n          invariant(\n            false,\n            `unsupported known React abstraction - ReactRelay property \"${reactHint.propertyName}\" not supported`\n          );\n      }\n    }\n    if (reactHint.object === realm.fbLibraries.react && reactHint.propertyName === \"forwardRef\") {\n      return null;\n    }\n    invariant(false, \"unsupported known React abstraction\");\n  } else {\n    invariant(value instanceof ECMAScriptSourceFunctionValue);\n    return value;\n  }\n}\n\n// props should never have \"ref\" or \"key\" properties, as they're part of ReactElement\n// object instead. to ensure that we can give this hint, we create them and then\n// delete them, so their descriptor is left undefined. we use this knowledge later\n// to ensure that when dealing with creating ReactElements with partial config,\n// we don't have to bail out becuase \"config\" may or may not have \"key\" or/and \"ref\"\nexport function deleteRefAndKeyFromProps(realm: Realm, props: ObjectValue | AbstractObjectValue): void {\n  setProperty(props, \"ref\", realm.intrinsics.undefined);\n  deleteProperty(props, \"ref\");\n  setProperty(props, \"key\", realm.intrinsics.undefined);\n  deleteProperty(props, \"key\");\n}\n\nexport function objectHasNoPartialKeyAndRef(\n  realm: Realm,\n  object: ObjectValue | AbstractValue | AbstractObjectValue\n): boolean {\n  if (object instanceof AbstractValue) {\n    return true;\n  }\n  return !(Get(realm, object, \"key\") instanceof AbstractValue || Get(realm, object, \"ref\") instanceof AbstractValue);\n}\n\nfunction recursivelyFlattenArray(realm: Realm, array, targetArray): void {\n  forEachArrayValue(realm, array, item => {\n    if (item instanceof ArrayValue && !item.intrinsicName) {\n      recursivelyFlattenArray(realm, item, targetArray);\n    } else {\n      let lengthValue = Get(realm, targetArray, \"length\");\n      invariant(lengthValue instanceof NumberValue);\n      Properties.Set(realm, targetArray, \"\" + lengthValue.value, item, true);\n    }\n  });\n}\n\nexport function flattenChildren(realm: Realm, array: ArrayValue): ArrayValue {\n  let flattenedChildren = Create.ArrayCreate(realm, 0);\n  recursivelyFlattenArray(realm, array, flattenedChildren);\n  return flattenedChildren;\n}\n\nexport function evaluateWithNestedParentEffects(realm: Realm, nestedEffects: Array<Effects>, f: () => Effects) {\n  let nextEffects = nestedEffects.slice();\n  let modifiedBindings;\n  let modifiedProperties;\n  let createdObjects;\n  let value;\n\n  if (nextEffects.length !== 0) {\n    let effects = nextEffects.shift();\n    value = effects.result;\n    createdObjects = effects.createdObjects;\n    modifiedBindings = effects.modifiedBindings;\n    modifiedProperties = effects.modifiedProperties;\n    realm.applyEffects(\n      new Effects(\n        value,\n        new Generator(realm, \"evaluateWithNestedEffects\"),\n        modifiedBindings,\n        modifiedProperties,\n        createdObjects\n      )\n    );\n  }\n  try {\n    if (nextEffects.length === 0) {\n      return f();\n    } else {\n      return evaluateWithNestedParentEffects(realm, nextEffects, f);\n    }\n  } finally {\n    if (modifiedBindings && modifiedProperties) {\n      realm.restoreBindings(modifiedBindings);\n      realm.restoreProperties(modifiedProperties);\n    }\n  }\n}\n\n// This function is mainly use to delete internal properties\n// on objects that we know are safe to access internally\n// such as ReactElements. Deleting here does not\n// emit change to modified bindings and is intended\n// for only internal usage – not for user-land code\nexport function deleteProperty(object: ObjectValue | AbstractObjectValue, property: string | SymbolValue): void {\n  if (object instanceof AbstractObjectValue) {\n    let elements = object.values.getElements();\n    if (elements && elements.size > 0) {\n      object = Array.from(elements)[0];\n    }\n    invariant(object instanceof ObjectValue);\n  }\n  let binding;\n  if (typeof property === \"string\") {\n    binding = object.properties.get(property);\n  } else {\n    binding = object.symbols.get(property);\n  }\n  if (!binding) {\n    return;\n  }\n  binding.descriptor = undefined;\n}\n\n// This function is mainly use to set internal properties\n// on objects that we know are safe to access internally\n// such as ReactElements. Setting properties here does not\n// emit change to modified bindings and is intended\n// for only internal usage – not for user-land code\nexport function setProperty(\n  object: ObjectValue | AbstractObjectValue,\n  property: string | SymbolValue,\n  value: Value\n): void {\n  if (object instanceof AbstractObjectValue) {\n    let elements = object.values.getElements();\n    if (elements && elements.size > 0) {\n      object = Array.from(elements)[0];\n    }\n    invariant(object instanceof ObjectValue);\n  }\n  let defaultBinding = {\n    descriptor: {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value,\n    },\n    key: property,\n    object,\n  };\n  let binding;\n  if (typeof property === \"string\") {\n    binding = object.properties.get(property);\n    if (!binding) {\n      binding = defaultBinding;\n      object.properties.set(property, binding);\n    }\n  } else if (property instanceof SymbolValue) {\n    binding = object.symbols.get(property);\n    if (!binding) {\n      binding = defaultBinding;\n      object.symbols.set(property, binding);\n    }\n  }\n  invariant(binding);\n  let descriptor = binding.descriptor;\n\n  if (!descriptor) {\n    return;\n  }\n  descriptor.value = value;\n}\n\n// This function is mainly use to get internal properties\n// on objects that we know are safe to access internally\n// such as ReactElements. Getting properties here does\n// not emit change to modified bindings and is intended\n// for only internal usage – not for user-land code\nexport function getProperty(\n  realm: Realm,\n  object: ObjectValue | AbstractObjectValue,\n  property: string | SymbolValue\n): Value {\n  if (object instanceof AbstractObjectValue) {\n    if (object.values.isTop()) {\n      return realm.intrinsics.undefined;\n    }\n    let elements = object.values.getElements();\n    if (elements && elements.size > 0) {\n      object = Array.from(elements)[0];\n    }\n    invariant(object instanceof ObjectValue);\n  }\n  let binding;\n  if (typeof property === \"string\") {\n    binding = object.properties.get(property);\n  } else {\n    binding = object.symbols.get(property);\n  }\n  if (!binding) {\n    return realm.intrinsics.undefined;\n  }\n  let descriptor = binding.descriptor;\n\n  if (!descriptor) {\n    return realm.intrinsics.undefined;\n  }\n  let value;\n  if (descriptor.value) {\n    value = descriptor.value;\n  } else if (descriptor.get || descriptor.set) {\n    AbstractValue.reportIntrospectionError(object, `react/utils/getProperty unsupported getter/setter property`);\n    throw new FatalError();\n  }\n  invariant(value instanceof Value, `react/utils/getProperty should not be called on internal properties`);\n  return value;\n}\n\nexport function createReactEvaluatedNode(\n  status:\n    | \"ROOT\"\n    | \"NEW_TREE\"\n    | \"INLINED\"\n    | \"BAIL-OUT\"\n    | \"FATAL\"\n    | \"UNKNOWN_TYPE\"\n    | \"RENDER_PROPS\"\n    | \"FORWARD_REF\"\n    | \"NORMAL\",\n  name: string\n): ReactEvaluatedNode {\n  return {\n    children: [],\n    message: \"\",\n    name,\n    status,\n  };\n}\n\nexport function getComponentName(realm: Realm, componentType: Value): string {\n  if (componentType instanceof SymbolValue && componentType === getReactSymbol(\"react.fragment\", realm)) {\n    return \"React.Fragment\";\n  }\n  invariant(\n    componentType instanceof ECMAScriptSourceFunctionValue ||\n      componentType instanceof BoundFunctionValue ||\n      componentType instanceof AbstractObjectValue ||\n      componentType instanceof AbstractValue\n  );\n  let boundText = componentType instanceof BoundFunctionValue ? \"bound \" : \"\";\n\n  if (componentType.__originalName) {\n    return boundText + componentType.__originalName;\n  }\n  if (realm.fbLibraries.reactRelay !== undefined) {\n    if (componentType === Get(realm, realm.fbLibraries.reactRelay, \"QueryRenderer\")) {\n      return boundText + \"QueryRenderer\";\n    }\n  }\n  if (componentType instanceof ECMAScriptSourceFunctionValue && componentType.$Prototype !== undefined) {\n    let name = Get(realm, componentType, \"name\");\n\n    if (name instanceof StringValue) {\n      return boundText + name.value;\n    }\n  }\n  if (realm.react.abstractHints.has(componentType)) {\n    let reactHint = realm.react.abstractHints.get(componentType);\n\n    invariant(reactHint !== undefined);\n    if (reactHint.object === realm.fbLibraries.react && reactHint.propertyName === \"forwardRef\") {\n      return \"forwarded ref\";\n    }\n  }\n  return boundText + \"anonymous\";\n}\n\nexport function convertConfigObjectToReactComponentTreeConfig(\n  realm: Realm,\n  config: ObjectValue | UndefinedValue\n): ReactComponentTreeConfig {\n  // defaults\n  let firstRenderOnly = false;\n\n  if (!(config instanceof UndefinedValue)) {\n    for (let [key] of config.properties) {\n      let propValue = getProperty(realm, config, key);\n      if (propValue instanceof StringValue || propValue instanceof NumberValue || propValue instanceof BooleanValue) {\n        let value = propValue.value;\n\n        // boolean options\n        if (typeof value === \"boolean\") {\n          if (key === \"firstRenderOnly\") {\n            firstRenderOnly = value;\n          }\n        }\n      } else {\n        let diagnostic = new CompilerDiagnostic(\n          \"__optimizeReactComponentTree(rootComponent, config) has been called with invalid arguments\",\n          realm.currentLocation,\n          \"PP0024\",\n          \"FatalError\"\n        );\n        realm.handleError(diagnostic);\n        if (realm.handleError(diagnostic) === \"Fail\") throw new FatalError();\n      }\n    }\n  }\n  return {\n    firstRenderOnly,\n  };\n}\n\nexport function getValueFromFunctionCall(\n  realm: Realm,\n  func: ECMAScriptSourceFunctionValue | BoundFunctionValue,\n  funcThis: ObjectValue | AbstractObjectValue | UndefinedValue,\n  args: Array<Value>,\n  isConstructor?: boolean = false\n): Value {\n  invariant(func.$Call, \"Expected function to be a FunctionValue with $Call method\");\n  let funcCall = func.$Call;\n  let newCall = func.$Construct;\n  let completion;\n  try {\n    if (isConstructor) {\n      invariant(newCall);\n      completion = newCall(args, func);\n    } else {\n      completion = funcCall(funcThis, args);\n    }\n  } catch (error) {\n    if (error instanceof AbruptCompletion) {\n      completion = error;\n    } else {\n      throw error;\n    }\n  }\n  if (completion instanceof PossiblyNormalCompletion) {\n    // in this case one of the branches may complete abruptly, which means that\n    // not all control flow branches join into one flow at this point.\n    // Consequently we have to continue tracking changes until the point where\n    // all the branches come together into one.\n    completion = realm.composeWithSavedCompletion(completion);\n  }\n  // return or throw completion\n  if (completion instanceof AbruptCompletion) throw completion;\n  invariant(completion instanceof Value);\n  return completion;\n}\n\nfunction isEventProp(name: string): boolean {\n  return name.length > 2 && name[0].toLowerCase() === \"o\" && name[1].toLowerCase() === \"n\";\n}\n\nexport function sanitizeReactElementForFirstRenderOnly(realm: Realm, reactElement: ObjectValue): ObjectValue {\n  let typeValue = getProperty(realm, reactElement, \"type\");\n\n  // ensure ref is null, as we don't use that on first render\n  setProperty(reactElement, \"ref\", realm.intrinsics.null);\n  // when dealing with host nodes, we want to sanitize them futher\n  if (typeValue instanceof StringValue) {\n    let propsValue = getProperty(realm, reactElement, \"props\");\n    if (propsValue instanceof ObjectValue) {\n      // remove all values apart from string/number/boolean\n      for (let [propName] of propsValue.properties) {\n        // check for onSomething prop event handlers, i.e. onClick\n        if (isEventProp(propName)) {\n          deleteProperty(propsValue, propName);\n        }\n      }\n    }\n  }\n  return reactElement;\n}\n\nexport function getLocationFromValue(expressionLocation: any) {\n  // if we can't get a value, then it's likely that the source file was not given\n  // (this happens in React tests) so instead don't print any location\n  return expressionLocation\n    ? ` at location: ${expressionLocation.start.line}:${expressionLocation.start.column} ` +\n        `- ${expressionLocation.end.line}:${expressionLocation.end.line}`\n    : \"\";\n}\n\nexport function createNoopFunction(realm: Realm): ECMAScriptSourceFunctionValue {\n  if (realm.react.noopFunction !== undefined) {\n    return realm.react.noopFunction;\n  }\n  let noOpFunc = new ECMAScriptSourceFunctionValue(realm);\n  let body = t.blockStatement([]);\n  ((body: any): FunctionBodyAstNode).uniqueOrderedTag = realm.functionBodyUniqueTagSeed++;\n  noOpFunc.$FormalParameters = [];\n  noOpFunc.$ECMAScriptCode = body;\n  realm.react.noopFunction = noOpFunc;\n  return noOpFunc;\n}\n\nexport function doNotOptimizeComponent(realm: Realm, componentType: Value): boolean {\n  if (componentType instanceof ObjectValue) {\n    let doNotOptimize = Get(realm, componentType, \"__reactCompilerDoNotOptimize\");\n\n    if (doNotOptimize instanceof BooleanValue) {\n      return doNotOptimize.value;\n    }\n  }\n  return false;\n}\n"]}