{"version":3,"sources":["../../../src/intrinsics/fb-www/global.js"],"names":["realm","global","$GlobalObject","moduleValue","createAbstractObject","kind","moduleExportsValue","$DefineOwnProperty","value","writable","enumerable","configurable","context","requireNameVal","requireNameValValue","fbLibraries","react","undefined","reactDom","reactDomServer","reactRelay","propTypes","requireVal","other","has","get","set","isCompatibleWith"],"mappings":"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","file":"global.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm } from \"../../realm.js\";\nimport { AbstractValue, NativeFunctionValue, StringValue, ObjectValue } from \"../../values/index.js\";\nimport { createMockReact, createMockReactDOM, createMockReactDOMServer } from \"./react-mocks.js\";\nimport { createMockReactRelay } from \"./relay-mocks.js\";\nimport { createAbstract } from \"../prepack/utils.js\";\nimport { createFbMocks } from \"./fb-mocks.js\";\nimport { FatalError } from \"../../errors\";\nimport { Get } from \"../../methods/index.js\";\nimport invariant from \"../../invariant\";\n\nexport default function(realm: Realm): void {\n  let global = realm.$GlobalObject;\n\n  // module.exports support\n  let moduleValue = AbstractValue.createAbstractObject(realm, \"module\");\n  moduleValue.kind = \"resolved\";\n  let moduleExportsValue = AbstractValue.createAbstractObject(realm, \"module.exports\");\n  moduleExportsValue.kind = \"resolved\";\n\n  moduleValue.$DefineOwnProperty(\"exports\", {\n    value: moduleExportsValue,\n    writable: true,\n    enumerable: false,\n    configurable: true,\n  });\n  global.$DefineOwnProperty(\"module\", {\n    value: moduleValue,\n    writable: true,\n    enumerable: false,\n    configurable: true,\n  });\n\n  // apply require() mock\n  global.$DefineOwnProperty(\"require\", {\n    value: new NativeFunctionValue(realm, \"require\", \"require\", 0, (context, [requireNameVal]) => {\n      invariant(requireNameVal instanceof StringValue);\n      let requireNameValValue = requireNameVal.value;\n\n      if (requireNameValValue === \"react\" || requireNameValValue === \"React\") {\n        if (realm.fbLibraries.react === undefined) {\n          let react = createMockReact(realm, requireNameValValue);\n          realm.fbLibraries.react = react;\n          return react;\n        }\n        return realm.fbLibraries.react;\n      } else if (requireNameValValue === \"react-dom\" || requireNameValValue === \"ReactDOM\") {\n        if (realm.fbLibraries.reactDom === undefined) {\n          let reactDom = createMockReactDOM(realm, requireNameValValue);\n          realm.fbLibraries.reactDom = reactDom;\n          return reactDom;\n        }\n        return realm.fbLibraries.reactDom;\n      } else if (requireNameValValue === \"react-dom/server\" || requireNameValValue === \"ReactDOMServer\") {\n        if (realm.fbLibraries.reactDomServer === undefined) {\n          let reactDomServer = createMockReactDOMServer(realm, requireNameValValue);\n          realm.fbLibraries.reactDomServer = reactDomServer;\n          return reactDomServer;\n        }\n        return realm.fbLibraries.reactDomServer;\n      } else if (requireNameValValue === \"react-relay\" || requireNameValValue === \"RelayModern\") {\n        if (realm.fbLibraries.reactRelay === undefined) {\n          let reactRelay = createMockReactRelay(realm, requireNameValValue);\n          realm.fbLibraries.reactRelay = reactRelay;\n          return reactRelay;\n        }\n        return realm.fbLibraries.reactRelay;\n      } else if (requireNameValValue === \"prop-types\" || requireNameValValue === \"PropTypes\") {\n        if (realm.fbLibraries.react === undefined) {\n          throw new FatalError(\"unable to require PropTypes due to React not being referenced in scope\");\n        }\n        let propTypes = Get(realm, realm.fbLibraries.react, \"PropTypes\");\n        invariant(propTypes instanceof ObjectValue);\n        return propTypes;\n      } else {\n        let requireVal;\n\n        if (realm.fbLibraries.other.has(requireNameValValue)) {\n          requireVal = realm.fbLibraries.other.get(requireNameValValue);\n        } else {\n          requireVal = createAbstract(realm, \"function\", `require(\"${requireNameValValue}\")`);\n          realm.fbLibraries.other.set(requireNameValValue, requireVal);\n        }\n        invariant(requireVal instanceof AbstractValue);\n        return requireVal;\n      }\n    }),\n    writable: true,\n    enumerable: false,\n    configurable: true,\n  });\n\n  if (realm.isCompatibleWith(\"fb-www\")) {\n    createFbMocks(realm, global);\n  }\n}\n"]}