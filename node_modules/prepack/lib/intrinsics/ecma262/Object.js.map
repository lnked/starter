{"version":3,"sources":["../../../src/intrinsics/ecma262/Object.js"],"names":["realm","func","context","value","argCount","NewTarget","OrdinaryCreateFromConstructor","ObjectCreate","intrinsics","ObjectPrototype","ToObject","isCompatibleWith","MOBILE_JSC_VERSION","ObjectAssign","defineNativeMethod","target","sources","to","to_must_be_partial","length","delayedSources","nextSource","keys","frm","frmSnapshot","frm_was_partial","isPartialObject","isSimpleObject","reportIntrospectionError","makeNotPartial","$OwnPropertyKeys","values","isTop","hasStringOrSymbolProperties","push","getSnapshot","removeProperties","kind","args","temporalAlias","makePartial","copyKeys","toSnapshot","makeSimple","temporalTo","createTemporalFromBuildFunction","methodNode","targetNode","sourceNodes","t","callExpression","skipInvariant","from","nextKey","desc","$GetOwnProperty","enumerable","ThrowIfMightHaveBeenDeleted","propValue","Set","O","Properties","createErrorThrowCompletion","TypeError","obj","throwIfNotConcrete","mightBeUndefined","ObjectDefineProperties","P","Attributes","mightBeObject","throwIfNotObject","key","ToPropertyKey","ToPropertyDescriptor","DefinePropertyOrThrow","throwIfNotConcreteObject","status","getOwnPropertyDescriptor","getterFunc","get","intrinsicName","undefined","useAbstractInterpretation","result","objNode","keyNode","set","configurable","propDesc","FromPropertyDescriptor","ownKeys","descriptors","descriptor","CreateDataProperty","$GetPrototypeOf","value1","value2","false","true","objectKeys","isInPureScope","array","createTemporalWithWidenedNumericProperty","isIntrinsicAndHasWidenedNumericProperty","nameList","CreateArrayFromList","objectValues","objectEntries","$PreventExtensions","proto","$SetPrototypeOf"],"mappings":"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","file":"Object.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport { ValuesDomain } from \"../../domains/index.js\";\nimport { FatalError } from \"../../errors.js\";\nimport { Realm } from \"../../realm.js\";\nimport { NativeFunctionValue } from \"../../values/index.js\";\nimport {\n  AbstractValue,\n  AbstractObjectValue,\n  ArrayValue,\n  ObjectValue,\n  NullValue,\n  UndefinedValue,\n  StringValue,\n  BooleanValue,\n  SymbolValue,\n  Value,\n} from \"../../values/index.js\";\nimport {\n  IsExtensible,\n  EnumerableOwnProperties,\n  GetOwnPropertyKeys,\n  Get,\n  RequireObjectCoercible,\n  SameValuePartial,\n  TestIntegrityLevel,\n  SetIntegrityLevel,\n  HasSomeCompatibleType,\n} from \"../../methods/index.js\";\nimport { Create, Properties as Props, To } from \"../../singletons.js\";\nimport type { BabelNodeExpression } from \"babel-types\";\nimport * as t from \"babel-types\";\nimport invariant from \"../../invariant.js\";\n\nexport default function(realm: Realm): NativeFunctionValue {\n  // ECMA262 19.1.1.1\n  let func = new NativeFunctionValue(realm, \"Object\", \"Object\", 1, (context, [value], argCount, NewTarget) => {\n    // 1. If NewTarget is neither undefined nor the active function, then\n    if (NewTarget && NewTarget !== func) {\n      // a. Return ? OrdinaryCreateFromConstructor(NewTarget, \"%ObjectPrototype%\").\n      return Create.OrdinaryCreateFromConstructor(realm, NewTarget, \"ObjectPrototype\");\n    }\n\n    // 2. If value is null, undefined or not supplied, return ObjectCreate(%ObjectPrototype%).\n    if (HasSomeCompatibleType(value, NullValue, UndefinedValue)) {\n      return Create.ObjectCreate(realm, realm.intrinsics.ObjectPrototype);\n    }\n\n    // 3. Return ToObject(value).\n    return To.ToObject(realm, value);\n  });\n\n  // ECMA262 19.1.2.1\n  if (!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION) && !realm.isCompatibleWith(\"mobile\")) {\n    let ObjectAssign = func.defineNativeMethod(\"assign\", 2, (context, [target, ...sources]) => {\n      // 1. Let to be ? ToObject(target).\n      let to = To.ToObject(realm, target);\n      let to_must_be_partial = false;\n\n      // 2. If only one argument was passed, return to.\n      if (!sources.length) return to;\n\n      // 3. Let sources be the List of argument values starting with the second argument.\n      sources;\n      let delayedSources = [];\n\n      // 4. For each element nextSource of sources, in ascending index order,\n      for (let nextSource of sources) {\n        let keys, frm, frmSnapshot;\n\n        // a. If nextSource is undefined or null, let keys be a new empty List.\n        if (HasSomeCompatibleType(nextSource, NullValue, UndefinedValue)) continue;\n\n        // b. Else,\n        // i. Let from be ToObject(nextSource).\n        frm = To.ToObject(realm, nextSource);\n\n        // ii. Let keys be ? from.[[OwnPropertyKeys]]().\n        let frm_was_partial = frm.isPartialObject();\n        if (frm_was_partial) {\n          if (!to.isSimpleObject() || !frm.isSimpleObject()) {\n            // If an object is not a simple object, it may have getters on it that can\n            // mutate any state as a result. We don't yet support this.\n            AbstractValue.reportIntrospectionError(nextSource);\n            throw new FatalError();\n          }\n\n          to_must_be_partial = true;\n          // Make this temporarily not partial\n          // so that we can call frm.$OwnPropertyKeys below.\n          frm.makeNotPartial();\n        }\n        keys = frm.$OwnPropertyKeys();\n\n        if (to_must_be_partial) {\n          if (to instanceof AbstractObjectValue && to.values.isTop()) {\n            // We don't know which objects to make partial and making all objects partial is failure in itself\n            AbstractValue.reportIntrospectionError(to);\n            throw new FatalError();\n          } else {\n            // if to has properties, we better remove them because after the temporal call to Object.assign we don't know their values anymore\n            if (to.hasStringOrSymbolProperties()) {\n              // preserve them in a snapshot and add the snapshot to the sources\n              delayedSources.push(to.getSnapshot({ removeProperties: true }));\n            }\n\n            if (frm_was_partial) {\n              if (frm instanceof AbstractObjectValue && frm.kind === \"explicit conversion to object\") {\n                // Make it implicit again since it is getting delayed into an Object.assign call.\n                delayedSources.push(frm.args[0]);\n              } else {\n                frmSnapshot = frm.getSnapshot();\n                frm.temporalAlias = frmSnapshot;\n                frm.makePartial();\n                delayedSources.push(frmSnapshot);\n              }\n            }\n          }\n        }\n\n        // c. Repeat for each element nextKey of keys in List order,\n        invariant(frm, \"from required\");\n        invariant(keys, \"keys required\");\n        copyKeys(keys, frm, to);\n      }\n\n      // 5. Return to.\n      if (to_must_be_partial) {\n        // if to has properties, we copy and delay them (at this stage we do not need to remove them)\n        if (to.hasStringOrSymbolProperties()) {\n          let toSnapshot = to.getSnapshot();\n          delayedSources.push(toSnapshot);\n        }\n\n        to.makePartial();\n\n        // We already established above that to is simple,\n        // but now that it is partial we need to set the _isSimple flag.\n        to.makeSimple();\n\n        // Tell serializer that it may add properties to to only after temporalTo has been emitted\n        let temporalTo = AbstractValue.createTemporalFromBuildFunction(\n          realm,\n          ObjectValue,\n          [ObjectAssign, to, ...delayedSources],\n          ([methodNode, targetNode, ...sourceNodes]: Array<BabelNodeExpression>) => {\n            return t.callExpression(methodNode, [targetNode, ...sourceNodes]);\n          },\n          { skipInvariant: true }\n        );\n        invariant(temporalTo instanceof AbstractObjectValue);\n        if (to instanceof AbstractObjectValue) {\n          temporalTo.values = to.values;\n        } else {\n          invariant(to instanceof ObjectValue);\n          temporalTo.values = new ValuesDomain(to);\n        }\n        to.temporalAlias = temporalTo;\n      }\n      return to;\n    });\n\n    function copyKeys(keys, from, to) {\n      // c. Repeat for each element nextKey of keys in List order,\n      for (let nextKey of keys) {\n        // i. Let desc be ? from.[[GetOwnProperty]](nextKey).\n        let desc = from.$GetOwnProperty(nextKey);\n\n        // ii. If desc is not undefined and desc.[[Enumerable]] is true, then\n        if (desc && desc.enumerable) {\n          Props.ThrowIfMightHaveBeenDeleted(desc.value);\n\n          // 1. Let propValue be ? Get(from, nextKey).\n          let propValue = Get(realm, from, nextKey);\n\n          // 2. Perform ? Set(to, nextKey, propValue, true).\n          Props.Set(realm, to, nextKey, propValue, true);\n        }\n      }\n    }\n  }\n\n  // ECMA262 19.1.2.2\n  func.defineNativeMethod(\"create\", 2, (context, [O, Properties]) => {\n    // 1. If Type(O) is neither Object nor Null, throw a TypeError exception.\n    if (!HasSomeCompatibleType(O, ObjectValue, NullValue)) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 2. Let obj be ObjectCreate(O).\n    let obj = Create.ObjectCreate(realm, ((O.throwIfNotConcrete(): any): ObjectValue | NullValue));\n\n    // 3. If Properties is not undefined, then\n    if (!Properties.mightBeUndefined()) {\n      // a. Return ? ObjectDefineProperties(obj, Properties).\n      return Props.ObjectDefineProperties(realm, obj, Properties);\n    }\n    Properties.throwIfNotConcrete();\n\n    // 4. Return obj.\n    return obj;\n  });\n\n  // ECMA262 19.1.2.3\n  func.defineNativeMethod(\"defineProperties\", 2, (context, [O, Properties]) => {\n    // 1. Return ? ObjectDefineProperties(O, Properties).\n    return Props.ObjectDefineProperties(realm, O, Properties);\n  });\n\n  // ECMA262 19.1.2.4\n  func.defineNativeMethod(\"defineProperty\", 3, (context, [O, P, Attributes]) => {\n    // 1. If Type(O) is not Object, throw a TypeError exception.\n    if (!O.mightBeObject()) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n    O = O.throwIfNotObject();\n\n    // 2. Let key be ? ToPropertyKey(P).\n    let key = To.ToPropertyKey(realm, P.throwIfNotConcrete());\n\n    // 3. Let desc be ? ToPropertyDescriptor(Attributes).\n    let desc = To.ToPropertyDescriptor(realm, Attributes);\n\n    // 4. Perform ? DefinePropertyOrThrow(O, key, desc).\n    Props.DefinePropertyOrThrow(realm, (O: any), key, desc);\n\n    // 4. Return O.\n    return O;\n  });\n\n  // ECMA262 19.1.2.5\n  func.defineNativeMethod(\"freeze\", 1, (context, [O]) => {\n    // 1. If Type(O) is not Object, return O.\n    if (!O.mightBeObject()) return O;\n\n    // 2. Let status be ? SetIntegrityLevel(O, \"frozen\").\n    O = O.throwIfNotConcreteObject();\n    let status = SetIntegrityLevel(realm, O, \"frozen\");\n\n    // 3. If status is false, throw a TypeError exception.\n    if (status === false) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 4. Return O.\n    return O;\n  });\n\n  // ECMA262 19.1.2.6\n  let getOwnPropertyDescriptor = func.defineNativeMethod(\"getOwnPropertyDescriptor\", 2, (context, [O, P]) => {\n    // 1. Let obj be ? ToObject(O).\n    let obj = To.ToObject(realm, O);\n\n    // 2. Let key be ? ToPropertyKey(P).\n    let key = To.ToPropertyKey(realm, P.throwIfNotConcrete());\n\n    // 3. Let desc be ? obj.[[GetOwnProperty]](key).\n    let desc = obj.$GetOwnProperty(key);\n\n    let getterFunc = desc && desc.get;\n    // If we are returning a descriptor with a NativeFunctionValue\n    // and it has no intrinsic name, then we create a temporal as this\n    // can only be done at runtime\n    if (\n      getterFunc instanceof NativeFunctionValue &&\n      getterFunc.intrinsicName === undefined &&\n      realm.useAbstractInterpretation\n    ) {\n      invariant(P instanceof Value);\n      // this will create a property descriptor at runtime\n      let result = AbstractValue.createTemporalFromBuildFunction(\n        realm,\n        ObjectValue,\n        [getOwnPropertyDescriptor, obj, P],\n        ([methodNode, objNode, keyNode]) => t.callExpression(methodNode, [objNode, keyNode])\n      );\n      invariant(result instanceof AbstractObjectValue);\n      result.makeSimple();\n      let get = Get(realm, result, \"get\");\n      let set = Get(realm, result, \"set\");\n      invariant(get instanceof AbstractValue);\n      invariant(set instanceof AbstractValue);\n      desc = {\n        get,\n        set,\n        enumerable: false,\n        configurable: true,\n      };\n    }\n\n    // 4. Return FromPropertyDescriptor(desc).\n    let propDesc = Props.FromPropertyDescriptor(realm, desc);\n\n    return propDesc;\n  });\n\n  // ECMA262 19.1.2.7\n  func.defineNativeMethod(\"getOwnPropertyNames\", 1, (context, [O]) => {\n    // 1. Return ? GetOwnPropertyKeys(O, String).\n    return GetOwnPropertyKeys(realm, O, StringValue);\n  });\n\n  // ECMA262 19.1.2.8\n  func.defineNativeMethod(\"getOwnPropertyDescriptors\", 1, (context, [O]) => {\n    // 1. Let obj be ? ToObject(O).\n    let obj = To.ToObject(realm, O);\n\n    // 2. Let ownKeys be ? obj.[[OwnPropertyKeys]]().\n    let ownKeys = obj.$OwnPropertyKeys();\n\n    // 3. Let descriptors be ! ObjectCreate(%ObjectPrototype%).\n    let descriptors = Create.ObjectCreate(realm, realm.intrinsics.ObjectPrototype);\n\n    // 4. Repeat, for each element key of ownKeys in List order,\n    for (let key of ownKeys) {\n      // a. Let desc be ? obj.[[GetOwnProperty]](key).\n      let desc = obj.$GetOwnProperty(key);\n      if (desc !== undefined) Props.ThrowIfMightHaveBeenDeleted(desc.value);\n\n      // b. Let descriptor be ! FromPropertyDescriptor(desc).\n      let descriptor = Props.FromPropertyDescriptor(realm, desc);\n\n      // c. If descriptor is not undefined, perform ! CreateDataProperty(descriptors, key, descriptor).\n      if (!(descriptor instanceof UndefinedValue)) Create.CreateDataProperty(realm, descriptors, key, descriptor);\n    }\n\n    // 5. Return descriptors.\n    return descriptors;\n  });\n\n  // ECMA262 19.1.2.9\n  if (!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION) && !realm.isCompatibleWith(\"mobile\"))\n    func.defineNativeMethod(\"getOwnPropertySymbols\", 1, (context, [O]) => {\n      // Return ? GetOwnPropertyKeys(O, Symbol).\n      return GetOwnPropertyKeys(realm, O, SymbolValue);\n    });\n\n  // ECMA262 19.1.2.10\n  func.defineNativeMethod(\"getPrototypeOf\", 1, (context, [O]) => {\n    // 1. Let obj be ? ToObject(O).\n    let obj = To.ToObject(realm, O);\n\n    // 2. Return ? obj.[[GetPrototypeOf]]().\n    return obj.$GetPrototypeOf();\n  });\n\n  // ECMA262 19.1.2.11\n  func.defineNativeMethod(\"is\", 2, (context, [value1, value2]) => {\n    // 1. Return SameValue(value1, value2).\n    return new BooleanValue(realm, SameValuePartial(realm, value1, value2));\n  });\n\n  // ECMA262 19.1.2.12\n  func.defineNativeMethod(\"isExtensible\", 1, (context, [O]) => {\n    // 1. If Type(O) is not Object, return false.\n    if (!O.mightBeObject()) return realm.intrinsics.false;\n    O = O.throwIfNotObject();\n\n    // 2. Return ? IsExtensible(O).\n    return new BooleanValue(realm, IsExtensible(realm, O));\n  });\n\n  // ECMA262 19.1.2.13\n  func.defineNativeMethod(\"isFrozen\", 1, (context, [O]) => {\n    // 1. If Type(O) is not Object, return true.\n    if (!O.mightBeObject()) return realm.intrinsics.true;\n\n    // 2. Return ? TestIntegrityLevel(O, \"frozen\").\n    O = O.throwIfNotConcreteObject();\n    return new BooleanValue(realm, TestIntegrityLevel(realm, O, \"frozen\"));\n  });\n\n  // ECMA262 19.1.2.14\n  func.defineNativeMethod(\"isSealed\", 1, (context, [O]) => {\n    // 1. If Type(O) is not Object, return true.\n    if (!O.mightBeObject()) return realm.intrinsics.true;\n\n    // 2. Return ? TestIntegrityLevel(O, \"sealed\").\n    O = O.throwIfNotConcreteObject();\n    return new BooleanValue(realm, TestIntegrityLevel(realm, O, \"sealed\"));\n  });\n\n  // ECMA262 19.1.2.15\n  let objectKeys = func.defineNativeMethod(\"keys\", 1, (context, [O]) => {\n    // 1. Let obj be ? ToObject(O).\n    let obj = To.ToObject(realm, O);\n\n    // If we're in pure scope and the items are completely abstract,\n    // then create an abstract temporal with an array kind\n    if (realm.isInPureScope() && obj instanceof AbstractObjectValue) {\n      let array = ArrayValue.createTemporalWithWidenedNumericProperty(\n        realm,\n        [objectKeys, obj],\n        ([methodNode, objNode]) => t.callExpression(methodNode, [objNode])\n      );\n      return array;\n    } else if (ArrayValue.isIntrinsicAndHasWidenedNumericProperty(obj)) {\n      return ArrayValue.createTemporalWithWidenedNumericProperty(realm, [objectKeys, obj], ([methodNode, objNode]) =>\n        t.callExpression(methodNode, [objNode])\n      );\n    }\n\n    // 2. Let nameList be ? EnumerableOwnProperties(obj, \"key\").\n    let nameList = EnumerableOwnProperties(realm, obj.throwIfNotConcreteObject(), \"key\");\n\n    // 3. Return CreateArrayFromList(nameList).\n    return Create.CreateArrayFromList(realm, nameList);\n  });\n\n  // ECMA262 9.1.2.16\n  if (!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION) && !realm.isCompatibleWith(\"mobile\")) {\n    let objectValues = func.defineNativeMethod(\"values\", 1, (context, [O]) => {\n      // 1. Let obj be ? ToObject(O).\n      let obj = To.ToObject(realm, O);\n\n      if (realm.isInPureScope()) {\n        // If we're in pure scope and the items are completely abstract,\n        // then create an abstract temporal with an array kind\n        if (obj instanceof AbstractObjectValue) {\n          let array = ArrayValue.createTemporalWithWidenedNumericProperty(\n            realm,\n            [objectValues, obj],\n            ([methodNode, objNode]) => t.callExpression(methodNode, [objNode])\n          );\n          return array;\n        } else if (ArrayValue.isIntrinsicAndHasWidenedNumericProperty(obj)) {\n          return ArrayValue.createTemporalWithWidenedNumericProperty(\n            realm,\n            [objectValues, obj],\n            ([methodNode, objNode]) => t.callExpression(methodNode, [objNode])\n          );\n        }\n      }\n\n      // 2. Let nameList be ? EnumerableOwnProperties(obj, \"value\").\n      let nameList = EnumerableOwnProperties(realm, obj.throwIfNotConcreteObject(), \"value\");\n\n      // 3. Return CreateArrayFromList(nameList).\n      return Create.CreateArrayFromList(realm, nameList);\n    });\n  }\n\n  // ECMA262 19.1.2.17\n  if (!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION) && !realm.isCompatibleWith(\"mobile\")) {\n    let objectEntries = func.defineNativeMethod(\"entries\", 1, (context, [O]) => {\n      // 1. Let obj be ? ToObject(O).\n      let obj = To.ToObject(realm, O);\n\n      // If we're in pure scope and the items are completely abstract,\n      // then create an abstract temporal with an array kind\n      if (realm.isInPureScope() && obj instanceof AbstractObjectValue) {\n        let array = ArrayValue.createTemporalWithWidenedNumericProperty(\n          realm,\n          [objectEntries, obj],\n          ([methodNode, objNode]) => t.callExpression(methodNode, [objNode])\n        );\n        return array;\n      } else if (ArrayValue.isIntrinsicAndHasWidenedNumericProperty(obj)) {\n        return ArrayValue.createTemporalWithWidenedNumericProperty(\n          realm,\n          [objectEntries, obj],\n          ([methodNode, objNode]) => t.callExpression(methodNode, [objNode])\n        );\n      }\n\n      // 2. Let nameList be ? EnumerableOwnProperties(obj, \"key+value\").\n      let nameList = EnumerableOwnProperties(realm, obj.throwIfNotConcreteObject(), \"key+value\");\n\n      // 3. Return CreateArrayFromList(nameList).\n      return Create.CreateArrayFromList(realm, nameList);\n    });\n  }\n\n  // ECMA262 19.1.2.18\n  func.defineNativeMethod(\"preventExtensions\", 1, (context, [O]) => {\n    // 1. If Type(O) is not Object, return O.\n    if (!O.mightBeObject()) return O;\n\n    // 2. Let status be ? O.[[PreventExtensions]]().\n    O = O.throwIfNotConcreteObject();\n    let status = O.$PreventExtensions();\n\n    // 3. If status is false, throw a TypeError exception.\n    if (status === false) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 4. Return O.\n    return O;\n  });\n\n  // ECMA262 19.1.2.19\n  func.defineNativeMethod(\"seal\", 1, (context, [O]) => {\n    // 1. If Type(O) is not Object, return O.\n    if (!O.mightBeObject()) return O;\n\n    // 2. Let status be ? SetIntegrityLevel(O, \"sealed\").\n    O = O.throwIfNotConcreteObject();\n    let status = SetIntegrityLevel(realm, O, \"sealed\");\n\n    // 3. If status is false, throw a TypeError exception.\n    if (status === false) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 4. Return O.\n    return O;\n  });\n\n  // ECMA262 19.1.2.20\n  if (!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION) && !realm.isCompatibleWith(\"mobile\"))\n    func.defineNativeMethod(\"setPrototypeOf\", 2, (context, [O, proto]) => {\n      // 1. Let O be ? RequireObjectCoercible(O).\n      O = RequireObjectCoercible(realm, O);\n\n      // 2. If Type(proto) is neither Object nor Null, throw a TypeError exception.\n      if (!HasSomeCompatibleType(proto, ObjectValue, NullValue)) {\n        throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n      }\n\n      // 3. If Type(O) is not Object, return O.\n      O = O.throwIfNotConcrete();\n      if (!(O instanceof ObjectValue)) return O;\n\n      // 4. Let status be ? O.[[SetPrototypeOf]](proto).\n      let status = O.$SetPrototypeOf(((proto: any): ObjectValue | NullValue));\n\n      // 5. If status is false, throw a TypeError exception.\n      if (status === false) {\n        throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n      }\n\n      // 6. Return O.\n      return O;\n    });\n\n  return func;\n}\n"]}